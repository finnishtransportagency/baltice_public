version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo "Installing OWASP Dependency-Check"
      - wget https://github.com/jeremylong/DependencyCheck/releases/download/v9.0.8/dependency-check-9.0.8-release.zip
      - unzip dependency-check-*
      - export PATH=dependency-check/bin:$PATH
      - echo "Installing SonarCube scanner"
      - export SONAR_SCANNER_VERSION=5.0.1.3006
      - export SONAR_SCANNER_HOME=.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
      - curl --create-dirs -sSLo .sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
      - unzip -o .sonar/sonar-scanner.zip -d .sonar/
      - export PATH=$SONAR_SCANNER_HOME/bin:$PATH
      - export SONAR_SCANNER_OPTS="-server"
  build:
    commands:
      - echo "We will do here..."
      - export X=$(pwd)
      - cd frontend/
      - npm install
      #- npm run build
      - cd $X
      - mkdir -p nvd # Will store nvd here
      - echo "Checking dependencies"
      - |
        dependency-check.sh \
          -s frontend/node_modules \
          -f ALL \
          --disableNuspec \
          --disableAssembly \
          -d nvd \
          --failOnCVSS 11
      - ls
      - echo Starting SonarCube scanning and sending dependency check report file to SonarCube `date` in `pwd`
      - env
      - sonar-scanner -Dsonar.projectKey=Baltice_frontend -Dsonar.exclusions=frontend/**/*.java,frontend/node_modules/**/*.* -Dsonar.sources=frontend/ -Dsonar.dependencyCheck.jsonReportPath=dependency-check-report.json -Dsonar.dependencyCheck.htmlReportPath=dependency-check-report.html  -Dsonar.host.url=https://sonarqube.vaylapilvi.fi
      - env
      - ls -la

# Caching the nvd database so each run doesn't download the
# entire nvd
cache:
  paths:
    - nvd/**/*

artifacts:
  files:
    - dependency-check-report*
    - testing/pipeline/assume-role.sh